<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mapper 위치 지정 -->
<mapper namespace="MNM.database.MNM_Mapper">

	<!-- 회원가입 데이터 insert -->
	<insert id="join" parameterType="MNM.model.MemberVO">
		insert into member_info
		(M_ID,
		M_PW, M_NICK, M_GENDER, M_MBTI)
		values(#{m_Id}, #{m_Pw}, #{m_Nick},
		#{m_Gender}, #{m_Mbti})
	</insert>

	<!-- 로그인 데이터 select -->
	<select id="login" parameterType="MNM.model.MemberVO"
		resultType="MNM.model.MemberVO">
		select * from member_info where M_ID=#{m_Id} and
		M_PW=#{m_Pw}
	</select>

	<!-- MBTI 데이터 가져오기 -->
	<select id="getMbti_data" parameterType="java.lang.String"
		resultType="MNM.model.MbtiDTO">
		select * from mbti_data where m_mbti=#{m_Mbti}
	</select>

	<!-- 회원가입 시 mbti 데이터 보내고 장르 3개 뽑아오기 -->
	<select id="getSong_random" parameterType="java.lang.String"
		resultType="MNM.model.MusicDTO">
		SELECT GENRE_1, GENRE_2, GENRE_3
		FROM MBTI_INFO
		WHERE M_MBTI
		= #{m_Mbti}
	</select>

	<!-- 장르 데이터 보내고 랜덤 노래 4개씩 뽑아오기 -->
	<select id="getSong_data" parameterType="MNM.model.MusicDTO"
		resultType="MNM.model.MusicDTO">
		SELECT *
		FROM (
		SELECT song_seq, singer, song_name, DBMS_RANDOM.VALUE(1,
		100) AS rand_value
		FROM song_info
		WHERE SONG_GENRE = #{genre_arr} AND
		ROWNUM <![CDATA[<]]>
		101
		ORDER BY DBMS_RANDOM.VALUE
		)
		WHERE ROWNUM <![CDATA[<]]>
		5
	</select>


	<!-- like 버튼 누르면 그 노래 seq 보내고 추천곡 받아오기 -->
	<select id="getRec_data" parameterType="java.lang.String"
		resultType="MNM.model.MusicDTO">
		select * from song_info,
		(SELECT REC_SONG1, REC_SONG2,
		REC_SONG3
		FROM REC_SONG
		WHERE SONG_SEQ IN (${song_seq}))
		where song_seq
		in (REC_SONG1, REC_SONG2, REC_SONG3)
	</select>

	<insert id="save_recSong" parameterType="MNM.model.MusicDTO">
		insert into
		recosong_info
		(MB_ID, SONG_SEQ)
		values(#{m_Id}, #{song_seq})
	</insert>

	<select id="login_getSong" parameterType="MNM.model.MbtiDTO"
		resultType="MNM.model.MusicDTO">
		<!-- select A.* from song_info A,
		(select A.rec_song1,
		A.rec_song2, A.rec_song3
		from rec_song A, (select song_seq from
		recosong_info where mb_id=#{m_Id}) B
		where A.song_seq in B.song_seq) B
		where A.song_seq in (B.rec_song1, B.rec_song2, B.rec_song3)-->
		select A.*
		from song_info A, member_info B,
		(select song_seq from recosong_info where mb_id=#{m_Id}) C
		where A.song_seq = C.song_seq and b.m_id = #{m_Id}
	</select>

</mapper>